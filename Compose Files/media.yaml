---
version: "3.8"

services:

  plex:
    image: plexinc/pms-docker:latest
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.plex.rule: Host(`watch.${DOMAIN}`)
        traefik.http.routers.plex.service: plex
        traefik.http.routers.plex.entrypoints: websecure
        traefik.http.routers.plex.tls.certresolver: cf
        traefik.http.services.plex.loadbalancer.server.port: 32400
    networks:
      - overlaynet
    environment:
      TZ: ${TZ}
      PLEX_CLAIM: ${PLEX_CLAIM} #https://plex.tv/claim
      ADVERTISE_IP: https://${HOSTNAME}.lan:32400,https://${TAILSCALEIP}:32400,https://watch.${DOMAIN}:443
      ALLOWED_NETWORKS: 192.168.45.0/24,100.64.0.0/10,10.0.0.0/8
    volumes:
      - ${APPDATA_MNT}/plex:/config
      - ${MEDIA_MNT}:/data:ro
    tmpfs:
      - /transcode
    labels:
      - flame.type=app
      - flame.name=Plex
      - flame.icon=plex
      - flame.url=https://watch.${DOMAIN}/

  overseerr:
    image: sctx/overseerr:latest
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.overseerr.rule: Host(`request.${DOMAIN}`)
        traefik.http.routers.overseerr.service: overseerr
        traefik.http.routers.overseerr.entrypoints: websecure
        traefik.http.routers.overseerr.tls.certresolver: cf
        traefik.http.services.overseerr.loadbalancer.server.port: 5055
    environment:
      LOG_LEVEL: debug
      TZ: ${TZ}
    volumes:
      - ${APPDATA_MNT}/overseerr:/app/config
    labels:
      - flame.type=app
      - flame.name=Overseerr
      - flame.icon=movie-search
      - flame.url=https://search.${DOMAIN}/

  radarr:
    image: hotio/radarr:latest
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.radarr.rule: Host(`${HOSTNAME}`) && PathPrefix(`/radarr`) && ClientIP(`192.168.45.0/24`, `100.64.0.0/10`)
        traefik.http.routers.radarr.service: radarr
        traefik.http.routers.radarr.entrypoints: internal
        traefik.http.services.radarr.loadbalancer.server.port: 7878
    networks:
      - overlaynet
    environment:
      TZ: ${TZ}
    depends_on:
      - sabnzbd
    volumes:
      - ${APPDATA_MNT}/radarr:/config
      - ${MEDIA_MNT}:/data
    labels:
      - flame.type=app
      - flame.name=Radarr
      - flame.icon=movie-open
      - flame.url=https://${DOMAIN}/radarr/
      - flame.visibility=hidden

  sonarr:
    image: hotio/sonarr:latest
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.sonarr.rule: Host(`${HOSTNAME}`) && PathPrefix(`/sonarr`) && ClientIP(`192.168.45.0/24`, `100.64.0.0/10`)
        traefik.http.routers.sonarr.service: sonarr
        traefik.http.routers.sonarr.entrypoints: internal
        traefik.http.services.sonarr.loadbalancer.server.port: 8989
    networks:
      - overlaynet
    environment:
      TZ: ${TZ}
    depends_on:
      - sabnzbd
    volumes:
      - ${APPDATA_MNT}/sonarr:/config
      - ${MEDIA_MNT}:/data
    labels:
      - flame.type=app
      - flame.name=Sonarr
      - flame.icon=youtube-tv
      - flame.url=https://${DOMAIN}/sonarr/
      - flame.visibility=hidden

  sabnzbd:
    image: hotio/sabnzbd:latest
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.sabnzbd.rule: Host(`${HOSTNAME}`) && PathPrefix(`/sabnzbd`) && ClientIP(`192.168.45.0/24`, `100.64.0.0/10`)
        traefik.http.routers.sabnzbd.service: sabnzbd
        traefik.http.routers.sabnzbd.entrypoints: internal
        traefik.http.services.sabnzbd.loadbalancer.server.port: 8080
    networks:
      - overlaynet
    environment:
      TZ: ${TZ}
    volumes:
      - ${APPDATA_MNT}/sabnzbd:/config
      - ${MEDIA_MNT}:/data
    labels:
      - flame.type=app
      - flame.name=Sabnzbd
      - flame.icon=cloud-download
      - flame.url=https://${DOMAIN}/sabnzbd/
      - flame.visibility=hidden

networks:
  overlaynet:
    external: true
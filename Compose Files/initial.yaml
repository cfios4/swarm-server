---
version: "3.8"

services:

  caddy:
    image: lucaslorentz/caddy-docker-proxy
    deploy:
      replicas: 3
      placement:
        constraints:
          - node.role == manager
    ports:
      - target: 80
        published: 80
        mode: host
      - target: 443
        published: 443
        mode: host
    networks:
      - overlaynet
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${APPDATA_MNT}:/data
      - ${APPDATA_MNT}:/config

  flame:
    image: pawelmalak/flame:multiarch
    deploy:
      replicas: 1
      labels:
        caddy: cafio.co
        caddy.reverse_proxy: "{{upstreams 5005}}"
    networks:
      - overlaynet
    environment:
      TZ: ${TZ}
      PASSWORD: ${PASSWORD}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ${APPDATA_MNT}/flame:/app/data

  pihole:
    image: cbcrowe/pihole-unbound:latest
    deploy:
      replicas: 1
      placement:
        constraints: 
          - node.labels.dns == true # Force managers because they will only have the macvlan setup
    networks:
      - dns-ip
    cap_add: # needed if using as DHCP server
      - NET_ADMIN
    environment:
      TZ: ${TZ}
      DHCP_ACTIVE: "false"
      DHCP_START: ${NETWORK}.100
      DHCP_END: ${NETWORK}.150
      DHCP_ROUTER: ${GATEWAY}
      FTLCONF_LOCAL_IPV4: ${DNS}
      PIHOLE_DOMAIN: lan
      PIHOLE_DNS_: 127.0.0.1#5335
      WEBPASSWORD: ${PASSWORD}
      WEBTHEME: default-dark 
      DNSSEC: "true"
      DNSMASQ_LISTENING: local
    volumes:
      - ${APPDATA_MNT}/pihole:/etc/pihole:rw
      - ${APPDATA_MNT}/pihole/unbound:/etc/dnsmasq.d:rw
    labels:
      - flame.type=app
      - flame.name=PiHole
      - flame.icon=pi-hole
      - flame.url=http://pi.hole/
      - flame.visibility=hidden

networks:
  overlaynet:
    driver: overlay
    name: overlaynet
  dns-ip:
    external: true

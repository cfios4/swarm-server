---
version: "3.8"

services:

  pairdrop:
    image: linuxserver/pairdrop:latest
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.pairdrop.rule: Host(`drop.${DOMAIN}`)
        traefik.http.routers.pairdrop.service: pairdrop
        traefik.http.routers.pairdrop.entrypoints: websecure
        traefik.http.services.pairdrop.loadbalancer.server.port: 3000
        traefik.http.routers.pairdrop.tls.certresolver: cf
    networks:
      - overlaynet
    environment:
      TZ: ${TZ}
    tmpfs:
      - /config
    labels:
      - flame.type=app
      - flame.name=Pairdrop
      - flame.icon=share-variant
      - flame.url=https://drop.${DOMAIN}/

  nextcloud:
    image: nextcloud:27
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.cloud.rule: Host(`cloud.${DOMAIN}`)
        traefik.http.routers.cloud.service: cloud
        traefik.http.routers.cloud.entrypoints: websecure
        traefik.http.services.cloud.loadbalancer.server.port: 80
        traefik.http.routers.cloud.tls.certresolver: cf
    networks:
      - overlaynet
    environment:
      TZ: ${TZ}
      NEXTCLOUD_ADMIN_USER: casey
      NEXTCLOUD_ADMIN_PASSWORD: changeme
      NEXTCLOUD_TRUSTED_DOMAINS: cloud.${DOMAIN}
      POSTGRES_DB: nextcloud
      POSTGRES_USER: nextcloud
      POSTGRES_PASSWORD: nextcloud
      POSTGRES_HOST: postgresdb
    depends_on:
      - postgresdb
    volumes:
      - ${APPDATA_MNT}/nextcloud:/var/www/html
    labels:
      - flame.type=app
      - flame.name=Cloud
      - flame.icon=cloud
      - flame.url=https://cloud.${DOMAIN}/

  postgresdb:
    image: postgres:16
    deploy:
      replicas: 1
    networks:
      - overlaynet
    environment:
      POSTGRES_USER: nextcloud
      POSTGRES_PASSWORD: nextcloud
      POSTGRES_DB: nextcloud
    volumes:
      - ${APPDATA_MNT}/postgres:/var/lib/postgresql/data

  # onlyoffice:
  #   image: onlyoffice/documentserver:latest
  #   deploy:
  #     replicas: 1
  #     labels:
  #       traefik.enable: "true"
  #       traefik.http.routers.office.rule: Host(`office.${DOMAIN}`)
  #       traefik.http.routers.office.service: office
  #       traefik.http.routers.office.entrypoints: websecure
  #       traefik.http.services.office.loadbalancer.server.port: 80
  #   networks:
  #     - overlaynet
  #   environment:
  #     TZ: ${TZ}
  #   tmpfs:
  #     - /var/log/onlyoffice

  microbin:
    image: danielszabo99/microbin:latest
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.bin.rule: Host(`bin.${DOMAIN}`)
        traefik.http.routers.bin.service: bin
        traefik.http.routers.bin.entrypoints: websecure
        traefik.http.services.bin.loadbalancer.server.port: 8080
        traefik.http.routers.bin.tls.certresolver: cf
    networks:
      - overlaynet
    environment:
      TZ: ${TZ}
      MICROBIN_ADMIN_USERNAME: admin
      MICROBIN_ADMIN_PASSWORD: changeme
      MICROBIN_EDITABLE: 'true'
      MICROBIN_HIGHLIGHTSYNTAX: 'true'
      MICROBIN_BIND: '0.0.0.0'
      MICROBIN_PRIVATE: 'true'
      MICROBIN_PUBLIC_PATH: https://bin.${DOMAIN}/
      MICROBIN_SHOW_READ_STATS: 'true'
      MICROBIN_TITLE: cafio
      MICROBIN_ENABLE_BURN_AFTER: 'true'
      MICROBIN_WIDE: 'true'
      MICROBIN_QR: 'true'
      MICROBIN_EXTERNAL_PASTA: 'true'
      MICROBIN_ENABLE_READONLY: 'true'
      MICROBIN_ENCRYPTION_CLIENT_SIDE: 'true'
      MICROBIN_ENCRYPTION_SERVER_SIDE: 'true'
      MICROBIN_DISABLE_TELEMETRY: 'true'
    tmpfs:
      - /app/microbin_data
    labels:
      - flame.type=app
      - flame.name=Microbin
      - flame.icon=delete-variant
      - flame.url=https://bin.${DOMAIN}/
  
  code:
    image: linuxserver/vscodium:latest
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.code.rule: Host(`code.${DOMAIN}`)
        traefik.http.routers.code.service: code
        traefik.http.routers.code.entrypoints: websecure
        traefik.http.services.code.loadbalancer.server.port: 3000
        traefik.http.routers.code.tls.certresolver: cf
    networks:
      - overlaynet
    environment:
      TZ: ${TZ}
    volumes:
      - ${APPDATA_MNT}/vscode:/config
    labels:
      - flame.type=app
      - flame.name=VSCode
      - flame.icon=microsoft-visual-studio
      - flame.url=https://code.${DOMAIN}/

  vaultwarden:
    image: vaultwarden/server:latest
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.vault.rule: Host(`vault.${DOMAIN}`)
        traefik.http.routers.vault.service: vault
        traefik.http.routers.vault.entrypoints: websecure
        traefik.http.services.vault.loadbalancer.server.port: 80
        traefik.http.routers.vault.tls.certresolver: cf
        traefik.http.middlewares.admin-deny.middlewares.errorpage.status: "403"
        traefik.http.middlewares.admin-deny.middlewares.errorpage.query: "/admin"
    networks:
      - overlaynet
    environment:
      TZ: ${TZ}
      DOMAIN: https://vault.${DOMAIN}/
      SENDS_ALLOWED: 'true'
      EMERGENCY_ACCESS_ALLOWED: 'true'
      ADMIN_TOKEN: ''
      WEB_VAULT_ENABLED: 'true'
      SIGNUPS_ALLOWED: 'false'
      SIGNUPS_VERIFY: 'false'
      SIGNUPS_DOMAINS_WHITELIST: ${DOMAIN}
      YUBICO_CLIENT_ID: '92307'
      YUBICO_SECRET_KEY: 72o9iOvaz1yUO+6MomnE7EkPNgw=
    volumes:
      - ${APPDATA_MNT}/vaultwarden:/data
    labels:
      - flame.type=app
      - flame.name=Vaultwarden
      - flame.icon=lock
      - flame.url=https://vault.${DOMAIN}/

  gitea:
    image: gitea/gitea:latest
    deploy:
      replicas: 1
      labels:
        traefik.enable: "true"
        traefik.http.routers.git.rule: Host(`git.${DOMAIN}`)
        traefik.http.routers.git.service: git
        traefik.http.routers.git.entrypoints: websecure
        traefik.http.services.git.loadbalancer.server.port: 3000
        traefik.http.routers.git.tls.certresolver: cf
    networks:
      - overlaynet
    environment:
      TZ: ${TZ}
      PROTOCOL: https
      DOMAIN: git.${DOMAIN}
      HTTP_PORT: '3000'
      APP_NAME: Gitea
      SHOW_USER_EMAIL: 'false'
      REVERSE_PROXY_TRUSTED_PROXIES: 127.0.0.0/8,::1/128, 192.168.45.0/24, ${DOMAIN}
      EMAIL_DOMAIN_ALLOWLIST: ${DOMAIN}
    volumes:
      - ${APPDATA_MNT}/gitea/config:/data/gitea
      - ${APPDATA_MNT}/gitea/data:/var/lib/gitea
    labels:
      - flame.type=app
      - flame.name=Gitea
      - flame.icon=git
      - flame.url=https://git.${DOMAIN}/

networks:
  overlaynet:
    external: true